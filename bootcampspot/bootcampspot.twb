<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0515.1630                               -->
<workbook original-version='18.1' source-build='2019.2.0 (20192.19.0515.1630)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Latest Assignment' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='1' max='30' min='1' />
      </column>
      <column caption='Max Allowed Absences' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='4.0'>
        <calculation class='tableau' formula='4.0' />
      </column>
      <column caption='Choose Student' datatype='string' name='[Student Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Alexander (George) Travis&quot;'>
        <calculation class='tableau' formula='&quot;Alexander (George) Travis&quot;' />
        <members>
          <member value='&quot;Alexander (George) Travis&quot;' />
          <member value='&quot;Alexander Mcclement&quot;' />
          <member value='&quot;Andrea Thomas&quot;' />
          <member value='&quot;Ari Horowitz&quot;' />
          <member value='&quot;Barney Jordan&quot;' />
          <member value='&quot;Benjamin Olsen&quot;' />
          <member value='&quot;Danielle Harden&quot;' />
          <member value='&quot;Esther Walker&quot;' />
          <member value='&quot;Frantz Felix&quot;' />
          <member value='&quot;Gabrielle Christ&quot;' />
          <member value='&quot;Gil Solis&quot;' />
          <member value='&quot;Greivin Badilla&quot;' />
          <member value='&quot;Henry Lopez&quot;' />
          <member value='&quot;Hoang Do&quot;' />
          <member value='&quot;Issouf Kiema&quot;' />
          <member value='&quot;Jared Kong&quot;' />
          <member value='&quot;Jeremy Guts&quot;' />
          <member value='&quot;Jonathon Lee&quot;' />
          <member value='&quot;Jose Bedregal&quot;' />
          <member value='&quot;Juanito Navarro&quot;' />
          <member value='&quot;Justin Le&quot;' />
          <member value='&quot;Kaitlyn Carlson&quot;' />
          <member value='&quot;Kat Dow&quot;' />
          <member value='&quot;Khangai Ganbayar&quot;' />
          <member value='&quot;Kindra Kinney&quot;' />
          <member value='&quot;Lisa Cabrera&quot;' />
          <member value='&quot;Lloyd Marcelino&quot;' />
          <member value='&quot;Marie Lenac&quot;' />
          <member value='&quot;Maximillian Cartwright&quot;' />
          <member value='&quot;Owen Chanthala&quot;' />
          <member value='&quot;Rachel Rohrbach&quot;' />
          <member value='&quot;Randall Burgess&quot;' />
          <member value='&quot;Richard Wang&quot;' />
          <member value='&quot;Ryan Sousa&quot;' />
          <member value='&quot;Spencer Fife&quot;' />
          <member value='&quot;Steven Blanton&quot;' />
          <member value='&quot;Sydney Russell&quot;' />
          <member value='&quot;Teresa Liu&quot;' />
          <member value='&quot;Trevor Olsen&quot;' />
          <member value='&quot;Vaughn Mcpherson&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='grades' inline='true' name='federated.0zhn5u203qp9hw1466s0q106ff4v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='grades' name='semistructpassivestore-direct.100si0y1dyajxl16uvxdn02sxtn6'>
            <connection class='semistructpassivestore-direct' directory='D:/Programming/uw/FullStack-Ground/bootcampspot' filename='grades.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[grades.json+]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
                <semistruct-schema table='[grades.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation all='true' name='grades.json+' type='union'>
          <columns>
            <column datatype='string' name='Table Name' />
            <column datatype='integer' name='Document Index (generated)' />
            <column datatype='string' name='assignmentTitle' />
            <column datatype='boolean' name='excused' />
            <column datatype='string' name='grade' />
            <column datatype='boolean' name='pending' />
            <column datatype='boolean' name='present' />
            <column datatype='boolean' name='remote' />
            <column datatype='string' name='sessionName' />
            <column datatype='string' name='studentName' />
            <column datatype='boolean' name='submitted' />
          </columns>
          <relation connection='semistructpassivestore-direct.100si0y1dyajxl16uvxdn02sxtn6' name='grades.json' table='[grades.json]' type='table' />
          <relation connection='semistructpassivestore-direct.100si0y1dyajxl16uvxdn02sxtn6' name='attendance.json' table='[attendance.json]' type='table' />
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[grades.json+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[grades.json+]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>assignmentTitle</remote-name>
            <remote-type>130</remote-type>
            <local-name>[assignmentTitle]</local-name>
            <parent-name>[grades.json+]</parent-name>
            <remote-alias>assignmentTitle</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excused</remote-name>
            <remote-type>11</remote-type>
            <local-name>[excused]</local-name>
            <parent-name>[grades.json+]</parent-name>
            <remote-alias>excused</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grade</remote-name>
            <remote-type>130</remote-type>
            <local-name>[grade]</local-name>
            <parent-name>[grades.json+]</parent-name>
            <remote-alias>grade</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending</remote-name>
            <remote-type>11</remote-type>
            <local-name>[pending]</local-name>
            <parent-name>[grades.json+]</parent-name>
            <remote-alias>pending</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>present</remote-name>
            <remote-type>11</remote-type>
            <local-name>[present]</local-name>
            <parent-name>[grades.json+]</parent-name>
            <remote-alias>present</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>remote</remote-name>
            <remote-type>11</remote-type>
            <local-name>[remote]</local-name>
            <parent-name>[grades.json+]</parent-name>
            <remote-alias>remote</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sessionName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sessionName]</local-name>
            <parent-name>[grades.json+]</parent-name>
            <remote-alias>sessionName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>studentName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[studentName]</local-name>
            <parent-name>[grades.json+]</parent-name>
            <remote-alias>studentName</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>submitted</remote-name>
            <remote-type>11</remote-type>
            <local-name>[submitted]</local-name>
            <parent-name>[grades.json+]</parent-name>
            <remote-alias>submitted</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Numeric Grade' datatype='integer' name='[Calculation_1529535028331859968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [grade] =  &quot;A+&quot; THEN 100&#13;&#10;ELSEIF [grade] = &quot;A&quot; THEN 95&#13;&#10;ELSEIF [grade] = &quot;A-&quot; THEN 90&#13;&#10;ELSEIF [grade] =  &quot;B+&quot; THEN 80&#13;&#10;ELSEIF [grade] = &quot;B&quot; THEN 85&#13;&#10;ELSEIF [grade] = &quot;B-&quot; THEN 80&#13;&#10;ELSEIF [grade] =  &quot;C+&quot; THEN 70&#13;&#10;ELSEIF [grade] = &quot;C&quot; THEN 75&#13;&#10;ELSEIF [grade] = &quot;C-&quot; THEN 70&#13;&#10;ELSEIF [grade] =  &quot;D+&quot; THEN 60&#13;&#10;ELSEIF [grade] = &quot;D&quot; THEN 65&#13;&#10;ELSEIF [grade] = &quot;D-&quot; THEN 60&#13;&#10;ELSEIF [grade] = &quot;F&quot; THEN 0&#13;&#10;END' />
      </column>
      <column caption='Assignment Type' datatype='string' name='[Calculation_1529535028335996931]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([assignmentTitle], &quot;Milestone&quot;) THEN &quot;Milestone&quot;&#13;&#10;ELSEIF CONTAINS([assignmentTitle], &quot;Project&quot;) THEN &quot;Project&quot;&#13;&#10;ELSEIF CONTAINS([assignmentTitle], &quot;Updated Portfolio Page&quot;) THEN &quot;Updated Portfolio Page&quot;&#13;&#10;ELSE  &quot;Homework&quot;&#13;&#10;END' />
      </column>
      <column caption='Attendance Type' datatype='string' name='[Calculation_1529535028340387846]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([sessionName]) THEN   NULL&#13;&#10;ELSEIF [remote] THEN &quot;Remote&quot;&#13;&#10;ELSEIF [pending] THEN &quot;Pending&quot;&#13;&#10;ELSEIF [excused] THEN &quot;Excused&quot;&#13;&#10;ELSEIF NOT [present] THEN &quot;Absent&quot;&#13;&#10;ELSE &quot;In person&quot;&#13;&#10;END' />
      </column>
      <column caption='Session Type' datatype='string' name='[Calculation_1529535028341039111]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([sessionName], &quot;Not required&quot;) THEN &quot;Not required&quot;&#13;&#10;ELSEIF CONTAINS([sessionName], &quot;Employer Competitive Series&quot;) THEN &quot;Employer Competitive Series&quot;&#13;&#10;ELSE &quot;Lesson&quot;&#13;&#10;END' />
      </column>
      <column caption='Is Past Assignment' datatype='boolean' name='[Calculation_1529535028347240457]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='NOT ([Calculation_1529535028335996931] = &quot;Homework&quot;)&#13;&#10;OR&#13;&#10;([Calculation_1529535028348932106] &lt;= [Parameters].[Parameter 1]&#13;&#10;AND&#13;&#10;NOT ([Calculation_1529535028348932106] = 0))' />
      </column>
      <column caption='Assignment Number' datatype='integer' name='[Calculation_1529535028348932106]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ISNULL(INT(LEFT([assignmentTitle], 2))) THEN&#13;&#10;INT(LEFT([assignmentTitle], 1))&#13;&#10;ELSE &#13;&#10;INT(LEFT([assignmentTitle], 2))&#13;&#10;END' />
      </column>
      <column caption='Is Selected Student' datatype='boolean' name='[Calculation_1529535028355571725]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Student Name Parameter] = [studentName]' />
      </column>
      <column caption='Fake Assignment Date' datatype='date' name='[Calculation_1529535028356403214]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(&quot;200&quot; + STR([Calculation_1529535028348932106]))' />
      </column>
      <column caption='Is Incomplete Assignment' datatype='boolean' name='[Calculation_1529535028357296143]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[grade] = &quot;F&quot; OR (NOT [submitted])' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Table Name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Assignment Title' datatype='string' name='[assignmentTitle]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>assignmentTitle</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Excused' datatype='boolean' name='[excused]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>excused</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>grade</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pending' datatype='boolean' name='[pending]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>pending</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Present' datatype='boolean' name='[present]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>present</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Remote' datatype='boolean' name='[remote]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>remote</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Session Name' datatype='string' name='[sessionName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>sessionName</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Student Name' datatype='string' name='[studentName]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>studentName</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Submitted' datatype='boolean' name='[submitted]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>submitted</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[Calculation_1529535028335996931]' derivation='None' name='[none:Calculation_1529535028335996931:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1529535028340387846]' derivation='None' name='[none:Calculation_1529535028340387846:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1529535028341039111]' derivation='None' name='[none:Calculation_1529535028341039111:nk]' pivot='key' type='nominal' />
      <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
      <folder name='Assignments' role='dimensions'>
        <folder-item name='[Calculation_1529535028335996931]' type='field' />
        <folder-item name='[Calculation_1529535028340387846]' type='field' />
        <folder-item name='[Calculation_1529535028347240457]' type='field' />
        <folder-item name='[Calculation_1529535028356403214]' type='field' />
        <folder-item name='[Calculation_1529535028357296143]' type='field' />
        <folder-item name='[assignmentTitle]' type='field' />
        <folder-item name='[grade]' type='field' />
        <folder-item name='[submitted]' type='field' />
      </folder>
      <folder name='Attendance' role='dimensions'>
        <folder-item name='[Calculation_1529535028341039111]' type='field' />
        <folder-item name='[excused]' type='field' />
        <folder-item name='[pending]' type='field' />
        <folder-item name='[present]' type='field' />
        <folder-item name='[remote]' type='field' />
        <folder-item name='[sessionName]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.534247' measure-ordering='alphabetic' measure-percentage='0.408219' parameter-percentage='0.0575342' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1529535028335996931:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Homework&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Updated Portfolio Page&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Project&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milestone&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1529535028341039111:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Encouraged, Not required&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Employer Competitive Series&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Not required&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesson&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1529535028340387846:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;In person&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Excused&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Present&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Absent&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pending&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Remote&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:grade:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;C-&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;D+&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;C+&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B+&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;F&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;D&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A-&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;D-&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A+&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Document Index (generated)' />
        <field-sort-custom-order field='assignmentTitle' />
        <field-sort-custom-order field='Calculation_1529535028335996931' />
        <field-sort-custom-order field='grade' />
        <field-sort-custom-order field='Calculation_1529535028357296143' />
        <field-sort-custom-order field='Calculation_1529535028331859968' />
        <field-sort-custom-order field='studentName' />
        <field-sort-custom-order field='submitted' />
        <field-sort-custom-order field='Calculation_1529535028354940940' />
        <field-sort-custom-order field='Calculation_1529535028334690306' />
        <field-sort-custom-order field='Calculation_1529535028334317569' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Latest Assignment' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range granularity='1' max='30' min='1' />
        </column>
        <column caption='Choose Student' datatype='string' name='[Student Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Alexander (George) Travis&quot;'>
          <calculation class='tableau' formula='&quot;Alexander (George) Travis&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0zhn5u203qp9hw1466s0q106ff4v'>
      <datasources>
        <datasource caption='grades' name='federated.0zhn5u203qp9hw1466s0q106ff4v' />
      </datasources>
      <datasource-dependencies datasource='federated.0zhn5u203qp9hw1466s0q106ff4v'>
        <column-instance column='[studentName]' derivation='None' name='[none:studentName:nk]' pivot='key' type='nominal' />
        <column caption='Student Name' datatype='string' name='[studentName]' role='dimension' type='nominal'>
          <desc>
            <formatted-text>
              <run>studentName</run>
            </formatted-text>
          </desc>
        </column>
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:studentName:nk]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[none:studentName:nk]' member='&quot;Barney Jordan&quot;' />
            <groupfilter function='member' level='[none:studentName:nk]' member='&quot;Danielle Harden&quot;' />
            <groupfilter function='member' level='[none:studentName:nk]' member='&quot;Gabrielle Christ&quot;' />
            <groupfilter function='member' level='[none:studentName:nk]' member='&quot;Gil Solis&quot;' />
            <groupfilter function='member' level='[none:studentName:nk]' member='&quot;Greivin Badilla&quot;' />
            <groupfilter function='member' level='[none:studentName:nk]' member='&quot;Jonathon Lee&quot;' />
            <groupfilter function='member' level='[none:studentName:nk]' member='&quot;Jose Bedregal&quot;' />
            <groupfilter function='member' level='[none:studentName:nk]' member='&quot;Kat Dow&quot;' />
            <groupfilter function='member' level='[none:studentName:nk]' member='&quot;Kindra Kinney&quot;' />
            <groupfilter function='member' level='[none:studentName:nk]' member='&quot;Steven Blanton&quot;' />
            <groupfilter function='member' level='[none:studentName:nk]' member='&quot;Sydney Russell&quot;' />
            <groupfilter function='member' level='[none:studentName:nk]' member='&quot;Trevor Olsen&quot;' />
          </groupfilter>
        </groupfilter>
        <target field='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Passing Metrics' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Passing Metrics' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Assignment Averages'>
      <table>
        <view>
          <datasources>
            <datasource caption='grades' name='federated.0zhn5u203qp9hw1466s0q106ff4v' />
          </datasources>
          <datasource-dependencies datasource='federated.0zhn5u203qp9hw1466s0q106ff4v'>
            <column caption='Numeric Grade' datatype='integer' name='[Calculation_1529535028331859968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [grade] =  &quot;A+&quot; THEN 100&#13;&#10;ELSEIF [grade] = &quot;A&quot; THEN 95&#13;&#10;ELSEIF [grade] = &quot;A-&quot; THEN 90&#13;&#10;ELSEIF [grade] =  &quot;B+&quot; THEN 80&#13;&#10;ELSEIF [grade] = &quot;B&quot; THEN 85&#13;&#10;ELSEIF [grade] = &quot;B-&quot; THEN 80&#13;&#10;ELSEIF [grade] =  &quot;C+&quot; THEN 70&#13;&#10;ELSEIF [grade] = &quot;C&quot; THEN 75&#13;&#10;ELSEIF [grade] = &quot;C-&quot; THEN 70&#13;&#10;ELSEIF [grade] =  &quot;D+&quot; THEN 60&#13;&#10;ELSEIF [grade] = &quot;D&quot; THEN 65&#13;&#10;ELSEIF [grade] = &quot;D-&quot; THEN 60&#13;&#10;ELSEIF [grade] = &quot;F&quot; THEN 0&#13;&#10;END' />
            </column>
            <column caption='Assignment Title' datatype='string' name='[assignmentTitle]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>assignmentTitle</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1529535028331859968]' derivation='Avg' name='[avg:Calculation_1529535028331859968:qk]' pivot='key' type='quantitative' />
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>grade</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[assignmentTitle]' derivation='None' name='[none:assignmentTitle:nk]' pivot='key' type='nominal' />
            <column-instance column='[studentName]' derivation='None' name='[none:studentName:nk]' pivot='key' type='nominal' />
            <column caption='Student Name' datatype='string' name='[studentName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>studentName</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <slices>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:assignmentTitle:nk]</rows>
        <cols>[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]</cols>
      </table>
      <simple-id uuid='{BB62545F-EEB9-467C-9251-10174B617325}' />
    </worksheet>
    <worksheet name='Attendance'>
      <table>
        <view>
          <datasources>
            <datasource caption='grades' name='federated.0zhn5u203qp9hw1466s0q106ff4v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Max Allowed Absences' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='4.0'>
              <calculation class='tableau' formula='4.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zhn5u203qp9hw1466s0q106ff4v'>
            <column caption='Attendance Type' datatype='string' name='[Calculation_1529535028340387846]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([sessionName]) THEN   NULL&#13;&#10;ELSEIF [remote] THEN &quot;Remote&quot;&#13;&#10;ELSEIF [pending] THEN &quot;Pending&quot;&#13;&#10;ELSEIF [excused] THEN &quot;Excused&quot;&#13;&#10;ELSEIF NOT [present] THEN &quot;Absent&quot;&#13;&#10;ELSE &quot;In person&quot;&#13;&#10;END' />
            </column>
            <column caption='Session Type' datatype='string' name='[Calculation_1529535028341039111]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([sessionName], &quot;Not required&quot;) THEN &quot;Not required&quot;&#13;&#10;ELSEIF CONTAINS([sessionName], &quot;Employer Competitive Series&quot;) THEN &quot;Employer Competitive Series&quot;&#13;&#10;ELSE &quot;Lesson&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Excused' datatype='boolean' name='[excused]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>excused</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1529535028340387846]' derivation='None' name='[none:Calculation_1529535028340387846:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1529535028341039111]' derivation='None' name='[none:Calculation_1529535028341039111:nk]' pivot='key' type='nominal' />
            <column-instance column='[sessionName]' derivation='None' name='[none:sessionName:nk]' pivot='key' type='nominal' />
            <column-instance column='[studentName]' derivation='None' name='[none:studentName:nk]' pivot='key' type='nominal' />
            <column caption='Pending' datatype='boolean' name='[pending]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>pending</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Present' datatype='boolean' name='[present]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>present</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Remote' datatype='boolean' name='[remote]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>remote</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Session Name' datatype='string' name='[sessionName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>sessionName</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Student Name' datatype='string' name='[studentName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>studentName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028340387846:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1529535028340387846:nk]' member='&quot;Absent&quot;' />
              <groupfilter function='member' level='[none:Calculation_1529535028340387846:nk]' member='&quot;Excused&quot;' />
              <groupfilter function='member' level='[none:Calculation_1529535028340387846:nk]' member='&quot;Remote&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028341039111:nk]'>
            <groupfilter function='member' level='[none:Calculation_1529535028341039111:nk]' member='&quot;Lesson&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:sessionName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:sessionName:nk]' member='%null%' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;Advanced AJAX&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;Bootstrap Layouts and Responsive Designs&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;Client-Side Storage&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;Down and Dirty CSS&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;Events and Event Handling&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;Git&apos;n Pro with HTML/CSS&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;Going Live&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;Heroes of CSS&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;Intro to APIs and AJAX&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;Intro to Web APIs&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;JavaScript Juggernauts&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;Joys of JavaScript&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;Jumping for JavaScript&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;Real-World API Application Development&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;The Zen of Coding&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;jQuery Begins&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;jQuery Calculator&quot;' />
              <groupfilter function='member' level='[none:sessionName:nk]' member='&quot;jQuery Jubilee&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]' direction='DESC' measure-to-sort-by='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]</column>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028341039111:nk]</column>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028340387846:nk]</column>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:sessionName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028340387846:nk]' />
              <lod column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:sessionName:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[Parameters].[Parameter 2]' z-order='1' />
          </pane>
        </panes>
        <rows>([federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk] / [federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028340387846:nk])</rows>
        <cols>[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{15C8E1F9-0960-434F-AEA9-348DCDE07A2D}' />
    </worksheet>
    <worksheet name='Average Grade'>
      <table>
        <view>
          <datasources>
            <datasource caption='grades' name='federated.0zhn5u203qp9hw1466s0q106ff4v' />
          </datasources>
          <datasource-dependencies datasource='federated.0zhn5u203qp9hw1466s0q106ff4v'>
            <column caption='Numeric Grade' datatype='integer' name='[Calculation_1529535028331859968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [grade] =  &quot;A+&quot; THEN 100&#13;&#10;ELSEIF [grade] = &quot;A&quot; THEN 95&#13;&#10;ELSEIF [grade] = &quot;A-&quot; THEN 90&#13;&#10;ELSEIF [grade] =  &quot;B+&quot; THEN 80&#13;&#10;ELSEIF [grade] = &quot;B&quot; THEN 85&#13;&#10;ELSEIF [grade] = &quot;B-&quot; THEN 80&#13;&#10;ELSEIF [grade] =  &quot;C+&quot; THEN 70&#13;&#10;ELSEIF [grade] = &quot;C&quot; THEN 75&#13;&#10;ELSEIF [grade] = &quot;C-&quot; THEN 70&#13;&#10;ELSEIF [grade] =  &quot;D+&quot; THEN 60&#13;&#10;ELSEIF [grade] = &quot;D&quot; THEN 65&#13;&#10;ELSEIF [grade] = &quot;D-&quot; THEN 60&#13;&#10;ELSEIF [grade] = &quot;F&quot; THEN 0&#13;&#10;END' />
            </column>
            <column caption='Assignment Type' datatype='string' name='[Calculation_1529535028335996931]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([assignmentTitle], &quot;Milestone&quot;) THEN &quot;Milestone&quot;&#13;&#10;ELSEIF CONTAINS([assignmentTitle], &quot;Project&quot;) THEN &quot;Project&quot;&#13;&#10;ELSEIF CONTAINS([assignmentTitle], &quot;Updated Portfolio Page&quot;) THEN &quot;Updated Portfolio Page&quot;&#13;&#10;ELSE  &quot;Homework&quot;&#13;&#10;END' />
            </column>
            <column caption='Assignment Title' datatype='string' name='[assignmentTitle]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>assignmentTitle</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1529535028331859968]' derivation='Avg' name='[avg:Calculation_1529535028331859968:qk]' pivot='key' type='quantitative' />
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>grade</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1529535028335996931]' derivation='None' name='[none:Calculation_1529535028335996931:nk]' pivot='key' type='nominal' />
            <column-instance column='[studentName]' derivation='None' name='[none:studentName:nk]' pivot='key' type='nominal' />
            <column caption='Student Name' datatype='string' name='[studentName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>studentName</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline1' label-type='none' paired-distribution-id='refline2' probability='95' scope='per-pane' show-lines='both' symmetric='false' value-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]' z-order='2' />
            <reference-line axis-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' paired-distribution-id='refline1' probability='95' scope='per-pane' value-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]' z-order='3' />
          </pane>
        </panes>
        <rows>([federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028335996931:nk] / [federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk])</rows>
        <cols>[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]</cols>
      </table>
      <simple-id uuid='{0F08F49A-393E-4232-898E-3DA060ADBE4B}' />
    </worksheet>
    <worksheet name='By student'>
      <table>
        <view>
          <datasources>
            <datasource caption='grades' name='federated.0zhn5u203qp9hw1466s0q106ff4v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Latest Assignment' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='1' max='30' min='1' />
            </column>
            <column caption='Choose Student' datatype='string' name='[Student Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Alexander (George) Travis&quot;'>
              <calculation class='tableau' formula='&quot;Alexander (George) Travis&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zhn5u203qp9hw1466s0q106ff4v'>
            <column caption='Assignment Type' datatype='string' name='[Calculation_1529535028335996931]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([assignmentTitle], &quot;Milestone&quot;) THEN &quot;Milestone&quot;&#13;&#10;ELSEIF CONTAINS([assignmentTitle], &quot;Project&quot;) THEN &quot;Project&quot;&#13;&#10;ELSEIF CONTAINS([assignmentTitle], &quot;Updated Portfolio Page&quot;) THEN &quot;Updated Portfolio Page&quot;&#13;&#10;ELSE  &quot;Homework&quot;&#13;&#10;END' />
            </column>
            <column caption='Is Past Assignment' datatype='boolean' name='[Calculation_1529535028347240457]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='NOT ([Calculation_1529535028335996931] = &quot;Homework&quot;)&#13;&#10;OR&#13;&#10;([Calculation_1529535028348932106] &lt;= [Parameters].[Parameter 1]&#13;&#10;AND&#13;&#10;NOT ([Calculation_1529535028348932106] = 0))' />
            </column>
            <column caption='Assignment Number' datatype='integer' name='[Calculation_1529535028348932106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL(INT(LEFT([assignmentTitle], 2))) THEN&#13;&#10;INT(LEFT([assignmentTitle], 1))&#13;&#10;ELSE &#13;&#10;INT(LEFT([assignmentTitle], 2))&#13;&#10;END' />
            </column>
            <column caption='Is Selected Student' datatype='boolean' name='[Calculation_1529535028355571725]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Student Name Parameter] = [studentName]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Assignment Title' datatype='string' name='[assignmentTitle]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>assignmentTitle</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>grade</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1529535028347240457]' derivation='None' name='[none:Calculation_1529535028347240457:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1529535028355571725]' derivation='None' name='[none:Calculation_1529535028355571725:nk]' pivot='key' type='nominal' />
            <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
            <column-instance column='[studentName]' derivation='None' name='[none:studentName:nk]' pivot='key' type='nominal' />
            <column caption='Student Name' datatype='string' name='[studentName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>studentName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028347240457:nk]'>
            <groupfilter function='member' level='[none:Calculation_1529535028347240457:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028355571725:nk]'>
            <groupfilter function='member' level='[none:Calculation_1529535028355571725:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]</column>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028355571725:nk]</column>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028347240457:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E3429C55-1789-43B8-8FFC-3414EAD7ECCA}' />
    </worksheet>
    <worksheet name='Grade distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='grades' name='federated.0zhn5u203qp9hw1466s0q106ff4v' />
          </datasources>
          <datasource-dependencies datasource='federated.0zhn5u203qp9hw1466s0q106ff4v'>
            <column caption='Numeric Grade' datatype='integer' name='[Calculation_1529535028331859968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [grade] =  &quot;A+&quot; THEN 100&#13;&#10;ELSEIF [grade] = &quot;A&quot; THEN 95&#13;&#10;ELSEIF [grade] = &quot;A-&quot; THEN 90&#13;&#10;ELSEIF [grade] =  &quot;B+&quot; THEN 80&#13;&#10;ELSEIF [grade] = &quot;B&quot; THEN 85&#13;&#10;ELSEIF [grade] = &quot;B-&quot; THEN 80&#13;&#10;ELSEIF [grade] =  &quot;C+&quot; THEN 70&#13;&#10;ELSEIF [grade] = &quot;C&quot; THEN 75&#13;&#10;ELSEIF [grade] = &quot;C-&quot; THEN 70&#13;&#10;ELSEIF [grade] =  &quot;D+&quot; THEN 60&#13;&#10;ELSEIF [grade] = &quot;D&quot; THEN 65&#13;&#10;ELSEIF [grade] = &quot;D-&quot; THEN 60&#13;&#10;ELSEIF [grade] = &quot;F&quot; THEN 0&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_1529535028331859968]' derivation='Avg' name='[avg:Calculation_1529535028331859968:qk]' pivot='key' type='quantitative' />
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>grade</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
            <column-instance column='[studentName]' derivation='None' name='[none:studentName:nk]' pivot='key' type='nominal' />
            <column caption='Student Name' datatype='string' name='[studentName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>studentName</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:grade:nk]' />
              <groupfilter function='member' level='[none:grade:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]</column>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]</rows>
        <cols>[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{F06D35E4-4E13-467D-A58C-D43A04C4EC5A}' />
    </worksheet>
    <worksheet name='Incomplete Assignments'>
      <table>
        <view>
          <datasources>
            <datasource caption='grades' name='federated.0zhn5u203qp9hw1466s0q106ff4v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Latest Assignment' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='1' max='30' min='1' />
            </column>
            <column caption='Max Allowed Absences' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='4.0'>
              <calculation class='tableau' formula='4.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zhn5u203qp9hw1466s0q106ff4v'>
            <column caption='Assignment Type' datatype='string' name='[Calculation_1529535028335996931]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([assignmentTitle], &quot;Milestone&quot;) THEN &quot;Milestone&quot;&#13;&#10;ELSEIF CONTAINS([assignmentTitle], &quot;Project&quot;) THEN &quot;Project&quot;&#13;&#10;ELSEIF CONTAINS([assignmentTitle], &quot;Updated Portfolio Page&quot;) THEN &quot;Updated Portfolio Page&quot;&#13;&#10;ELSE  &quot;Homework&quot;&#13;&#10;END' />
            </column>
            <column caption='Is Past Assignment' datatype='boolean' name='[Calculation_1529535028347240457]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='NOT ([Calculation_1529535028335996931] = &quot;Homework&quot;)&#13;&#10;OR&#13;&#10;([Calculation_1529535028348932106] &lt;= [Parameters].[Parameter 1]&#13;&#10;AND&#13;&#10;NOT ([Calculation_1529535028348932106] = 0))' />
            </column>
            <column caption='Assignment Number' datatype='integer' name='[Calculation_1529535028348932106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL(INT(LEFT([assignmentTitle], 2))) THEN&#13;&#10;INT(LEFT([assignmentTitle], 1))&#13;&#10;ELSE &#13;&#10;INT(LEFT([assignmentTitle], 2))&#13;&#10;END' />
            </column>
            <column caption='Is Incomplete Assignment' datatype='boolean' name='[Calculation_1529535028357296143]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[grade] = &quot;F&quot; OR (NOT [submitted])' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Assignment Title' datatype='string' name='[assignmentTitle]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>assignmentTitle</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>grade</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1529535028335996931]' derivation='None' name='[none:Calculation_1529535028335996931:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1529535028347240457]' derivation='None' name='[none:Calculation_1529535028347240457:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1529535028357296143]' derivation='None' name='[none:Calculation_1529535028357296143:nk]' pivot='key' type='nominal' />
            <column-instance column='[assignmentTitle]' derivation='None' name='[none:assignmentTitle:nk]' pivot='key' type='nominal' />
            <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
            <column-instance column='[studentName]' derivation='None' name='[none:studentName:nk]' pivot='key' type='nominal' />
            <column caption='Student Name' datatype='string' name='[studentName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>studentName</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Submitted' datatype='boolean' name='[submitted]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>submitted</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028335996931:nk]'>
            <groupfilter function='member' level='[none:Calculation_1529535028335996931:nk]' member='&quot;Homework&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028347240457:nk]'>
            <groupfilter function='member' level='[none:Calculation_1529535028347240457:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028357296143:nk]'>
            <groupfilter function='member' level='[none:Calculation_1529535028357296143:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]</column>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028347240457:nk]</column>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028335996931:nk]</column>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028357296143:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]' />
              <lod column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:assignmentTitle:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Max Incomplete' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[Parameter 2]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]</rows>
        <cols>[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{3482A565-6265-4EE2-9E94-738637232C83}' />
    </worksheet>
    <worksheet name='Number of grades'>
      <table>
        <view>
          <datasources>
            <datasource caption='grades' name='federated.0zhn5u203qp9hw1466s0q106ff4v' />
          </datasources>
          <datasource-dependencies datasource='federated.0zhn5u203qp9hw1466s0q106ff4v'>
            <column caption='Numeric Grade' datatype='integer' name='[Calculation_1529535028331859968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [grade] =  &quot;A+&quot; THEN 100&#13;&#10;ELSEIF [grade] = &quot;A&quot; THEN 95&#13;&#10;ELSEIF [grade] = &quot;A-&quot; THEN 90&#13;&#10;ELSEIF [grade] =  &quot;B+&quot; THEN 80&#13;&#10;ELSEIF [grade] = &quot;B&quot; THEN 85&#13;&#10;ELSEIF [grade] = &quot;B-&quot; THEN 80&#13;&#10;ELSEIF [grade] =  &quot;C+&quot; THEN 70&#13;&#10;ELSEIF [grade] = &quot;C&quot; THEN 75&#13;&#10;ELSEIF [grade] = &quot;C-&quot; THEN 70&#13;&#10;ELSEIF [grade] =  &quot;D+&quot; THEN 60&#13;&#10;ELSEIF [grade] = &quot;D&quot; THEN 65&#13;&#10;ELSEIF [grade] = &quot;D-&quot; THEN 60&#13;&#10;ELSEIF [grade] = &quot;F&quot; THEN 0&#13;&#10;END' />
            </column>
            <column caption='Assignment Title' datatype='string' name='[assignmentTitle]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>assignmentTitle</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1529535028331859968]' derivation='Count' name='[cnt:Calculation_1529535028331859968:qk]' pivot='key' type='quantitative' />
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>grade</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[assignmentTitle]' derivation='None' name='[none:assignmentTitle:nk]' pivot='key' type='nominal' />
            <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
            <column-instance column='[studentName]' derivation='None' name='[none:studentName:nk]' pivot='key' type='nominal' />
            <column caption='Student Name' datatype='string' name='[studentName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>studentName</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:grade:nk]' />
              <groupfilter function='member' level='[none:grade:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zhn5u203qp9hw1466s0q106ff4v].[cnt:Calculation_1529535028331859968:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]</column>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:assignmentTitle:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk] / [federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk])</rows>
        <cols>[federated.0zhn5u203qp9hw1466s0q106ff4v].[cnt:Calculation_1529535028331859968:qk]</cols>
      </table>
      <simple-id uuid='{FF08AFBC-903B-4AE5-9939-BB3813D178E4}' />
    </worksheet>
    <worksheet name='Unsubmitted'>
      <table>
        <view>
          <datasources>
            <datasource caption='grades' name='federated.0zhn5u203qp9hw1466s0q106ff4v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Latest Assignment' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='1' max='30' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0zhn5u203qp9hw1466s0q106ff4v'>
            <column caption='Assignment Type' datatype='string' name='[Calculation_1529535028335996931]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([assignmentTitle], &quot;Milestone&quot;) THEN &quot;Milestone&quot;&#13;&#10;ELSEIF CONTAINS([assignmentTitle], &quot;Project&quot;) THEN &quot;Project&quot;&#13;&#10;ELSEIF CONTAINS([assignmentTitle], &quot;Updated Portfolio Page&quot;) THEN &quot;Updated Portfolio Page&quot;&#13;&#10;ELSE  &quot;Homework&quot;&#13;&#10;END' />
            </column>
            <column caption='Is Past Assignment' datatype='boolean' name='[Calculation_1529535028347240457]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='NOT ([Calculation_1529535028335996931] = &quot;Homework&quot;)&#13;&#10;OR&#13;&#10;([Calculation_1529535028348932106] &lt;= [Parameters].[Parameter 1]&#13;&#10;AND&#13;&#10;NOT ([Calculation_1529535028348932106] = 0))' />
            </column>
            <column caption='Assignment Number' datatype='integer' name='[Calculation_1529535028348932106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL(INT(LEFT([assignmentTitle], 2))) THEN&#13;&#10;INT(LEFT([assignmentTitle], 1))&#13;&#10;ELSE &#13;&#10;INT(LEFT([assignmentTitle], 2))&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Assignment Title' datatype='string' name='[assignmentTitle]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>assignmentTitle</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1529535028347240457]' derivation='Attribute' name='[attr:Calculation_1529535028347240457:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1529535028335996931]' derivation='None' name='[none:Calculation_1529535028335996931:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1529535028347240457]' derivation='None' name='[none:Calculation_1529535028347240457:nk]' pivot='key' type='nominal' />
            <column-instance column='[assignmentTitle]' derivation='None' name='[none:assignmentTitle:nk]' pivot='key' type='nominal' />
            <column-instance column='[studentName]' derivation='None' name='[none:studentName:nk]' pivot='key' type='nominal' />
            <column-instance column='[submitted]' derivation='None' name='[none:submitted:nk]' pivot='key' type='nominal' />
            <column caption='Student Name' datatype='string' name='[studentName]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>studentName</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Submitted' datatype='boolean' name='[submitted]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>submitted</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_1529535028348932106]' derivation='Sum' name='[sum:Calculation_1529535028348932106:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028347240457:nk]'>
            <groupfilter function='member' level='[none:Calculation_1529535028347240457:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:submitted:nk]'>
            <groupfilter function='member' level='[none:submitted:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:submitted:nk]</column>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]</column>
            <column>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028347240457:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028335996931:nk]' />
              <lod column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:assignmentTitle:nk]' />
              <tooltip column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[attr:Calculation_1529535028347240457:nk]' />
              <tooltip column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Calculation_1529535028348932106:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]' z-order='1' />
            <reference-line axis-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline1' label-type='none' paired-distribution-id='refline2' probability='95' scope='per-pane' show-lines='both' symmetric='false' value-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]' z-order='2' />
            <reference-line axis-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' paired-distribution-id='refline1' probability='95' scope='per-pane' value-column='[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]' z-order='3' />
          </pane>
        </panes>
        <rows>([federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028335996931:nk] / [federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk])</rows>
        <cols>[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{21CAD84E-3754-414B-B88A-B8ABC3D50353}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Passing Metrics'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='grades' name='federated.0zhn5u203qp9hw1466s0q106ff4v' />
      </datasources>
      <datasource-dependencies datasource='federated.0zhn5u203qp9hw1466s0q106ff4v'>
        <column caption='Attendance Type' datatype='string' name='[Calculation_1529535028340387846]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF ISNULL([sessionName]) THEN   NULL&#13;&#10;ELSEIF [remote] THEN &quot;Remote&quot;&#13;&#10;ELSEIF [pending] THEN &quot;Pending&quot;&#13;&#10;ELSEIF [excused] THEN &quot;Excused&quot;&#13;&#10;ELSEIF NOT [present] THEN &quot;Absent&quot;&#13;&#10;ELSE &quot;In person&quot;&#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_1529535028340387846]' derivation='None' name='[none:Calculation_1529535028340387846:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98724' id='8' param='horz' type='layout-flow' w='99304' x='348' y='638'>
            <zone h='98724' id='6' type='layout-basic' w='92338' x='348' y='638'>
              <zone h='98724' id='3' name='Incomplete Assignments' w='46169' x='348' y='638'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98724' id='5' name='Attendance' w='46169' x='46517' y='638'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98724' id='7' is-fixed='true' param='vert' type='layout-flow' w='6966' x='92686' y='638'>
              <zone h='15722' id='9' name='Attendance' param='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028340387846:nk]' type='filter' w='6966' x='92686' y='638'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7422' id='10' name='Attendance' pane-specification-id='0' param='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028340387846:nk]' type='color' w='6966' x='92686' y='16360'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98724' id='19' param='vert' type='layout-flow' w='99304' x='348' y='638'>
                <zone fixed-size='280' h='98724' id='3' is-fixed='true' name='Incomplete Assignments' w='46169' x='348' y='638'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15722' id='9' mode='checkdropdown' name='Attendance' param='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028340387846:nk]' type='filter' w='6966' x='92686' y='638'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98724' id='5' is-fixed='true' name='Attendance' w='46169' x='46517' y='638'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7422' id='10' name='Attendance' pane-specification-id='0' param='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028340387846:nk]' type='color' w='6966' x='92686' y='16360'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B1E7E754-E1E2-4840-9D4D-F6DBC71FFF3F}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Average Grade' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028335996931:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[sum:Calculation_1529535028331859968:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9501C1F3-DD6C-4DFB-976D-144BCE65B103}' />
    </window>
    <window class='worksheet' name='Unsubmitted' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:submitted:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028335996931:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028347240457:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028335996931:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028347240457:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:assignmentTitle:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1E0CFF0-99C3-4C22-BBFE-E1048840F935}' />
    </window>
    <window class='worksheet' name='Incomplete Assignments' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028335996931:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028347240457:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028357296143:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:assignmentTitle:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{019E8CC2-BF4B-460D-9F2B-B2038899BED2}' />
    </window>
    <window class='worksheet' name='Grade distribution' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[avg:Calculation_1529535028331859968:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25B14DE5-02C8-4836-9FDC-115E818FF63E}' />
    </window>
    <window class='worksheet' name='Number of grades' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:assignmentTitle:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EB9B6C6-E784-4534-AB55-FE9BF1F095BE}' />
    </window>
    <window class='worksheet' name='Assignment Averages' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BA13049E-5692-423C-B70C-C97672731FDC}' />
    </window>
    <window class='worksheet' name='Attendance' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028340387846:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028340387846:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028340387846:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028341039111:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:sessionName:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:studentName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8CA340D-E782-4917-B465-C95A3395916A}' />
    </window>
    <window class='worksheet' name='By student' tab-color='#6e597f'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Student Name Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028347240457:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028355571725:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:assignmentTitle:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:grade:nk]</field>
            <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[yr:Calculation_1529535028356403214:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9E953D4-8D26-4FA6-BBA2-3273C237D094}' />
    </window>
    <window class='dashboard' maximized='true' name='Passing Metrics' tab-color='#6e597f'>
      <viewpoints>
        <viewpoint name='Attendance'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0zhn5u203qp9hw1466s0q106ff4v].[none:Calculation_1529535028340387846:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Incomplete Assignments'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{313014C1-FEFB-4BCF-BECD-00E7D34BCF6B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Assignment Averages' width='192'>
      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
      AB4fNf8/zbzfP5Hpn/gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Attendance' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Grade' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='87' name='By student' width='144'>
      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
    </thumbnail>
    <thumbnail height='192' name='Grade distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Incomplete Assignments' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAQ6klEQVR4nO3dy5Ib133H8W93A2jc75e5cW4kx7RFWZbilJepVCXOE2QVv0Cq8hRZZpWq
      PEAqq+ySnRep2EmcimPHsWNZpIYU73PhzOAONIBG37OgRIvkSCKHgDDQ+X8WqmGjB/ij1b/p
      7tPnnNaiKIoQQlH6ogsQYpEkAEJpEgChNAmAUJoEQChtKQIQRRHSWPV2ZBuebykCAMj/vLcU
      BMGiS7iUliYAQsxDbNEFvK5PDju4frjoMpZWEAYYurHoMi6dpQnA3/3T/3DUshZdhviGkVMg
      oTQJgFCaBEAoTQIglCYBEEq7UADOzs6+8LUo9BiPp0xs+4XlneZT+pZNu9O5yEcKMRcXagZt
      ttq4rgOaRiGT4vGTY0qVEtbYolSuYPcnPD455vrOJsPhkCu7N7AmLt7wmDCKiFybk96Ycj5D
      QgdicU6etihWsgRhDGfYIl+q0O1blKsrrDXKM/7aQjzzxkcA3/cAmEzGdLpdWs0mo+4xXSti
      9+oOztgCI8na6gr2xGZ9pczQskHTqBfStPpjmq0Wx8fHxCOXp32bfrtFv3nM0NHY2dognSuS
      0nyqaxuMreHMv7QQn3njI8Cg22Zn9xrBdMjE1ymmY6TyJQqFEgkjzsrqBmAw7EO+WKLV6bOx
      nseZJkiaJjfjGQhcKqtb1Co50mMPLXLIlevkC3k0oLGyimkmeHp8zM7u1uy/tRCf0pZhTHAU
      RfzV3/5Y7gSLmZNWIKE0CYBQmgRAKE0CIJS2NN2hb2xWqRYyiy5jaUVRhKYBaIsu5VJZmlag
      KIrQdTlgXZTv+xiGgaZJAD5P9iihNAmAUJoEQChtaS6CwzCEy3+5cmlFYUioaXIJ/JKlCcAv
      //0nTMajRZchvmHkFEgoTQIglCYBEEqTAAilSQCE0l4IwHjYY+IEjMfj1/z1CPulwe8AtjVg
      ZLu4tkV3+OJ7TcdjXnee4jCUuUDFfH2uGTTipHmGpg8JfYeVeoXj0w7VSglN19F1OD3t0KgV
      aXY6NFav0Dw+INBMcknQkjmYWqSKDaa9LiM0Ev4UV0/QO3UpVmo0my3iAVS2Vzk7OqFRK3N8
      1sHQNErVOtNhBzNfYtxto5sZTg4esHfzfaql/OK2kPhGe34EiKKAs6dNzlotAJ48fkwUTNFj
      BrfvHTAdWdjdIw6bNttXtzn95DalzeskYxEHh8dMJhMmTkilmEXTdLTQJ9JjhM4AI1XFH/ZY
      u7ZHMm7w5OAJYRQy7Laorq6TyuQYdU44Pu0wmYyImzkMQuora7Lzi7l63hs0sIeMojTRdEgA
      JLSQp60e5XKVhBFiOy7DfpdCdYNKOcNkOOL07Ix8qYoz6hHPFMkkExQKeUaDAZoWYkcx9DBg
      2GtRKNdoNVuUCyWS2ThHR2es1ivEUll814UwpNs+I12skIwngBDfmRDG0lRLeX7+k3+RG2Fi
      5pamO7QEQMyDtAIJpUkAhNIkAEJpEgChtKXpDq0bBrohD3kTs7U0rUAyKP7tyKD488keJZQm
      ARBKkwAIpUkAhNKWphXon//zDsOxs+gyllYYRehyAfyKpQnAT3/zSB6QIWZOToGE0iQAQmkS
      AKE0CYBQmgRAKO0LAxBFIQcHh/RPj+hPfaaOSxgGRFFEGIZ4roPn+xwfHeN5PkHg47guAHd/
      92v6ts/dD39By/JwHIcgCHAcB9dqcdKbEIQRnusShCGB7+P7Po7jEIUhjuMShSGu4xCGl76r
      klhiX9gMqmkajjOl7WpUjTP+7Re/YufqDeq712g//IhJkETXQiLXodMfEtc8pk7Eux+8h5kt
      0Ds9wnNdTo8O6Zo6eA5xPSIKPPp+gmELHt9/QHntCpFrUytmORsF1PImge9D6DElTS6fZ3u9
      /nVuE6GQL7kPoFFMGpzaGr3ekCtrdSLd4PH9eyR1g8D3iHSNarUOREQaFCOIACNmMuqdUqit
      MfZjeO6UGBGO65HLJFkvbWB3jqk2VtlYX8FxfMo5k1ZnHzeoE3gemZRJbeUK1nD4dW0LoaAL
      dYeOQo8H9x5g5spcWXu9v87NZot6vfbGBYI8KV7Mz4XuBGt6nGvfuvFGv3PRnV+IeZJWIKE0
      CYBQmgRAKE0CIJS2NIPif/qbR4yn3qJLWVphGMqkAudYmgDIrBBvR2aFOJ/sUUJpEgChNAmA
      UNrSjAnutpqE4es+XUy8LAw+vQiWS4AXLE0A7n70oTwgQ8ycnAIJpUkAhNIkAEJpEgChNAmA
      UNpMA9BqNSGKGI8nr7wWRREHj+7z5Ojk+bJutzvLjxfijc20GbTf71GrVmi329y/22R16xr9
      s0PCRI5rm1XcKMm1jVUOHt6lO4lIRA6Hh0dkc2l0w2QyaBPEssTDEeXGBmeHTyisbrO5Upll
      mUI8N9MjgO+52FMHx/UoFHK0micMrAmdThtdTzCdDBlaQzrdIb1uBzOVIZswcIixvdGgO7BI
      p5KkciWyhsc01Oi0e7MsUYgXzLQ3aK/TJNBNcukkk9EQM1PAHg1IZnJkUkns0RDbByPyIJbE
      iDy8yCCTMkkkEoyGfXwtTtqME48ZtDtdcvkCZiIuT4oXc7E03aElAGIepBVIKE0CIJQmARBK
      kwAIpS1Nd+hyvUHWKSy6jKUVRZGMBz7H0rQCyaD4tyOD4s8ne5RQmgRAKE0CIJQmARBKW5pW
      oN/+8udM7Ve7WYvX0xxF/OtDmVXjZUsTAHs8lr5Ab2FghRw2JQAvk1MgoTQJgFCaBEAoTQIg
      lDa3AHi+/6WvB0EARARBgO/7XPr+GOIbaW6tQHfu3mGtVsaJEuRTcWzXx7NHZEo1psMOTzsW
      77/7LQ4fH2B7HusrZfpjn1IuSbvdY/3KOkcHTyjX1ylkU/MqUyhuTkeACF3TGAyGPHjwgKPD
      I9JmxMODUw6fPGLi6RRzaQDOjh9j5sqcnLWJuwMePG1TLprs37pPpdGg1enMp0QhmFMATo6e
      kCtUiCLI5/NU6g1S6QLlQoZqrYE77uOFGqCx++3vYoY26ZRJb6qxUimQSmWo14s8efgQP5xH
      hUI8M5dToNWN7U9/Wnlh+Xdu3ny2tF59vqxWqwCvzvtTrcSwxmM21ldeeU2IWbm0d4LjyQx7
      e9eBZ+MBhJgHaQYVSpMACKVJAITSJABCaUszKF66Qr8d1wuY+PL37mVLEwCZFeLtyKwQ55M9
      SihNAiCUJgEQSru0d4Jf9o8/uUV/NF10GUurVkjz53/8zqLLuHSWJgA/v3XIUctadBlLa2+j
      JAE4h5wCCaVJAITSJABCaRIAoTQJgFDa7FqBoog7tz/CSBfY3ljBdjxy2TSWNSabSTGe2KTS
      GRx7TCKZZjoZk85mcB2XRDLFxx/+mkypQaWQY9A6ZhLLsVEtkExnMXS5fS/mY6bNoKlUkpHn
      8eTxI+J6yCf3XKx+h9VGhcAsEwsO8SOTjO7w4PiUtdUGEzfB925ex/U8sppG86yJazsUqyb/
      /Ytfsbp5lXf2tmZZphDPzfY+gKbh2DbxpMbICSgV86TTKSr5BEZhFat9yKA/Rs+nqTfWqFby
      RLEShg6laoOdzXUePXyEGS9SKhWp1iasNl4dLyzErMwuAJrG1u51toB2u0W1WntllXJmF77g
      j/nuzg4AO7s7z5e9/70SIGOCxfzM5SL4vJ1fiMtIWoGE0iQAQmkSAKE0CYBQ2tJ0h/6LP3mX
      ifPlU66LL5ZLxRddwqUkg+IVIYPizyd7lFCaBEAoTQIglLY0F8HNk6eEgTzo+aKMWIz66tqi
      y7h0liYAD/Zvy/SIbyFXKEoAziGnQEJpEgChNAmAUJoEQChNAiCU9sYBOHx0n/3921gT79zX
      2+32859bp2cMeydYDnRPn7J/9w5Pm92LVyvEjL1xM+h4MqVUzGBZFp/87g65+gbj3hnJXIlY
      6NCxpmjBlI8+fsTq2gqlbIhmruKMRgRhwMQa8tixCX0X2+pRLFdp9wbEDZPRoEkiV8Eb99nc
      vc6j+5+w9873KOVS8/juQlzgFEiDdmdALBjixdIMBwMqjVVSpoEfaqSSJu12jwQu9uc6b2p6
      jHK5jOvYDPtdegOLTKFMORsnmcnjOVP8UKdcLFApF2l3epSLWdodOWKI+XnjI8DV698iFovh
      uS7fyZRIptPon/YwDDwXL9RIxGBtcwfTNDF0QIdoY53haMz1vT0ce4wRTxKP6WiRz+jehxQb
      m1zf20EzEgRelngyjWuPSaZzs/7OQjz3xgGIx5/1K0+YJgnTfPHNYjE+W5IwX/rFhEm5/Gxh
      PJd/oYQ/+MMfvLhu8tl6ZrwAyKwQYn6kFUgoTQIglCYBEEqTAAilLU136PraOq7jLLqMpWUm
      k4su4VKSQfGKkEHx55M9SihNAiCUJgEQSluai+BWf0wQLrqK5WXoUC9lF13GpbM0Afjrf/iZ
      PCn+LextlPibv/zhosu4dOQUSChNAiCUJgEQSpv5NcAnv/tfipvv0Hv8W9Ib3yWNTb5QAE0n
      8G0cR4PIQdNjaEYc353S7/aJ9IhqsUQql2UwsCgWcljWiGy+QEyeEyzmZOYBMHNlRt2ngIYz
      GXJ0+IBCfY1xt8Xu9S363YCp28We+OQKOSBCDyHSI9qtNsXQZf/WbSrlCvFchd7YYWe9Mesy
      hQDmEIB4wiSwOhTq6/StCZliGS1wKZZKTB2fRDxOJl9jOvaIJwxcz0WLAA0MYDyeUKqUMfQ4
      9VqN0UhafsT8zDwAa+vrwDoAKxd8jyuf+7mQMWVEmJgbuQgWSptLAMaDDh/v32Fkuy8s7w8G
      564fBi6T5+sGtFvPZoIY9PvzKE+I5+ZyJ/j4tM23b9zAswf87D/+i83tLc5aYzxnwNbWNr7n
      0er0adTKDLtNKisruHbEwBoQS8RxLIuT5hnDzhl7N9+nWsp/9YcKcQFzCUA6oXNwdExgW+QL
      eayhxZWt69j9Q9K5PE/2PyRfauASI1+uUSmkOeh3iCXTBJ5Npb4G+CT0KkkzMY8ShQDmFID1
      7WuMRyOSq3WmjksykUAzYmjlq0xdn5sf/ICYoRNEOroWous621czfHzrFtnKKhvrzy6foyjA
      lw5wYo7mEgBN08jmnk1olY19/vm0MdKp33+k/rn/xhNJ3vvg+y+9k0EMmRdIzI+0AgmlLU13
      6EYpgxwILq5WzCy6hEtJBsUrQgbFn0/2KKE0CYBQmgRAKE0CIJS2NK1Af//j/6NjTRddxtJa
      LWX40Z+9t+gyLp2lCcBv7p3KrBBvYW+jtOgSLiU5BRJKkwAIpUkAhNIkAEJpEgChtK9sBQqn
      XY7aAa5rQ+BQW1kjrgU4gUYmGWNgTaiWi7RabQrlMsNul2KlgmWNKOaS3Lp9l3S+xOZajcFo
      SimXYWANSaVjHB302drdwLb6xFNZYoaBRog7tQn0BKm4gev7ZNLpr2NbCAV9ZQAiQn774Uf8
      6Q//iAd39zk9OcHUfe4dtdheqZLQIvb7fSr5BAcPj+j1zkj1hiTiMVLEya9s0z89pJ+I2N+/
      y9qVXcxChv5JG0jz6OFDfNvC8nVqxTyaphF5Y47aY+r5FOu7e1/DZhCq+spTIE2L8f3vf8Dx
      wSGlcpVcJo3jeOSyWTK5ApVSgVTSpN1qM52MMLN5EjEDMxHHzNexTh8TAhPboVTKYcTTVCoV
      TDPO2OphmkkCdNKpFGnDJ5Yt4Loh2UyKYqVGIZv6GjaDUNVXHgF0s8haA2gUf79wfe3Fdaw+
      B5bF5o1r5FLxF157973z7z5m1q+ysf7ZvzaBiKMnB6zXy8QalTf4CkJc3EzuBKdzRW58u/jV
      K34pjY2trVmUI8Rr+3/32M/1RKXzswAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of grades' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Passing Metrics' width='192'>
      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
      1QCJCunw2yYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Unsubmitted' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
