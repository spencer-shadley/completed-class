{"version":3,"sources":["components/Grid/index.js","utils/API.js","components/Jumbotron/index.js","utils/GlobalState.js","utils/actions.js","pages/Detail.js","components/List/index.js","components/DeleteBtn/index.js","pages/FavoritesList.js","components/CreatePostForm/index.js","components/PostsList/index.js","pages/Home.js","components/Nav/index.js","pages/NoMatch.js","App.js","index.js"],"names":["Container","fluid","children","className","Row","Col","size","split","map","s","join","getPosts","axios","get","getPost","id","deletePost","delete","savePost","postData","post","Jumbotron","style","height","clear","paddingTop","textAlign","StoreContext","createContext","Provider","reducer","state","action","type","currentPost","loading","posts","filter","_id","favorites","StoreProvider","value","props","useReducer","title","body","author","dispatch","useStoreContext","useContext","Detail","useEffect","API","match","params","then","res","data","catch","err","console","log","indexOf","onClick","to","List","ListItem","DeleteBtn","role","tabIndex","FavoritesList","length","key","removeFromFavorites","CreatePostForm","titleRef","useRef","bodyRef","authorRef","alt","src","onSubmit","e","preventDefault","current","result","required","ref","placeholder","disabled","PostsList","results","removePost","Home","Nav","store","href","NoMatch","aria-label","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6bee11d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n    return <div className={`container${fluid ? `-fluid` : ``}`}>{children}</div>;\n}\nContainer.propTypes = {\n    children: PropTypes.node,\n    fluid: PropTypes.string\n};\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n    return <div className={`row${fluid ? `-fluid` : ``}`}>{children}</div>;\n}\nRow.propTypes = {\n    children: PropTypes.node,\n    fluid: PropTypes.string\n};\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n    return (\n        <div\n            className={size\n                .split(` `)\n                .map(s => `col-${ s}`)\n                .join(` `)}\n        >\n            {children}\n        </div>\n    );\n}\nCol.propTypes = {\n    children: PropTypes.node,\n    size: PropTypes.string\n};\n","import axios from 'axios';\n\nexport default {\n    // Gets all posts\n    getPosts() {\n        return axios.get(`/api/posts`);\n    },\n    // Gets the post with the given id\n    getPost(id) {\n        return axios.get(`/api/posts/${ id}`);\n    },\n    // Deletes the post with the given id\n    deletePost(id) {\n        return axios.delete(`/api/posts/${ id}`);\n    },\n    // Saves a post to the database\n    savePost(postData) {\n        return axios.post(`/api/posts`, postData);\n    }\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction Jumbotron({ children }) {\n    return (\n        <div\n            style={{\n                height: 560,\n                clear: `both`,\n                paddingTop: 120,\n                textAlign: `center`\n            }}\n            className=\"jumbotron border border-success\"\n        >\n            {children}\n        </div>\n    );\n}\nJumbotron.propTypes = {\n    children: PropTypes.node\n};\n\nexport default Jumbotron;\n","import {\n    ADD_FAVORITE,\n    ADD_POST,\n    LOADING,\n    REMOVE_FAVORITE,\n    REMOVE_POST,\n    SET_CURRENT_POST,\n    UPDATE_FAVORITES,\n    UPDATE_POSTS\n} from './actions';\nimport React, { createContext, useContext, useReducer } from 'react';\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n    case SET_CURRENT_POST:\n        return {\n            ...state,\n            currentPost: action.post,\n            loading: false\n        };\n\n    case UPDATE_POSTS:\n        return {\n            ...state,\n            posts: [...action.posts],\n            loading: false\n        };\n\n    case ADD_POST:\n        return {\n            ...state,\n            posts: [action.post, ...state.posts],\n            loading: false\n        };\n\n    case REMOVE_POST:\n        return {\n            ...state,\n            posts: state.posts.filter(post => post._id !== action._id)\n        };\n\n    case ADD_FAVORITE:\n        return {\n            ...state,\n            favorites: [action.post, ...state.favorites],\n            loading: false\n        };\n\n    case UPDATE_FAVORITES:\n        return {\n            ...state,\n            favorites: [...state.favorites],\n            loading: false\n        };\n\n    case REMOVE_FAVORITE:\n        return {\n            ...state,\n            favorites: state.favorites.filter(post => post._id !== action._id)\n        };\n\n    case LOADING:\n        return {\n            ...state,\n            loading: true\n        };\n\n    default:\n        return state;\n    }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useReducer(reducer, {\n        posts: [],\n        currentPost: {\n            _id: 0,\n            title: ``,\n            body: ``,\n            author: ``\n        },\n        favorites: [],\n        loading: false\n    });\n\n    return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => useContext(StoreContext);\n\nexport { StoreProvider, useStoreContext };\n","export const UPDATE_POSTS = `UPDATE_POSTS`;\nexport const REMOVE_POST = `REMOVE_POST`;\nexport const SET_CURRENT_POST = `SET_CURRENT_POST`;\nexport const ADD_POST = `ADD_POST`;\nexport const LOADING = `LOADING`;\n\nexport const ADD_FAVORITE = `ADD_FAVORITE`;\nexport const REMOVE_FAVORITE = `REMOVE_FAVORITE`;\nexport const UPDATE_FAVORITES = `UPDATE_FAVORITES`;\n","import {\n    ADD_FAVORITE,\n    REMOVE_FAVORITE,\n    SET_CURRENT_POST\n} from '../utils/actions';\nimport { Col, Container, Row } from '../components/Grid';\nimport React, { useEffect } from 'react';\nimport API from '../utils/API';\nimport Jumbotron from '../components/Jumbotron';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useStoreContext } from '../utils/GlobalState';\n\nconst Detail = props => {\n    const [state, dispatch] = useStoreContext();\n\n    useEffect(() => {\n        API.getPost(props.match.params.id)\n            .then(res => dispatch({ type: SET_CURRENT_POST, post: res.data }))\n            .catch(err => console.log(err));\n    });\n\n    const addFavorite = () => {\n        dispatch({\n            type: ADD_FAVORITE,\n            post: state.currentPost\n        });\n    };\n\n    const removeFavorite = () => {\n        dispatch({\n            type: REMOVE_FAVORITE,\n            _id: state.currentPost._id\n        });\n    };\n\n    return (\n        <>\n            {state.currentPost ?\n                <Container fluid>\n                    <Row>\n                        <Col size=\"md-12\">\n                            <Jumbotron>\n                                <h1>\n                                    {state.currentPost.title} by {state.currentPost.author}\n                                </h1>\n                            </Jumbotron>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col size=\"md-10 md-offset-1\">\n                            <article>\n                                <h1>Content:</h1>\n                                <p>{state.currentPost.body}</p>\n                            </article>\n                        </Col>\n                        {state.favorites.indexOf(state.currentPost) !== -1 ?\n                            <button className=\"btn btn-danger\" onClick={removeFavorite}>\n                                Remove from Favorites!\n                            </button>\n                            :\n                            <button className=\"btn\" onClick={addFavorite}>\n                                ❤ Add to Favorites\n                            </button>\n                        }\n                    </Row>\n                    <Row>\n                        <Col size=\"md-2\">\n                            <Link to=\"/\">← Back to Posts</Link>\n                        </Col>\n                    </Row>\n                </Container>\n                :\n                <div>loading...</div>\n            }\n        </>\n    );\n};\nDetail.propTypes = {\n    match: PropTypes.object\n};\n\nexport default Detail;\n","import './style.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport function List({ children }) {\n    return (\n        <div className=\"list-overflow-container\">\n            <ul className=\"list-group\">{children}</ul>\n        </div>\n    );\n}\nList.propTypes = {\n    children: PropTypes.node\n};\n\nexport function ListItem({ children }) {\n    return <li className=\"list-group-item\">{children}</li>;\n}\nListItem.propTypes = {\n    children: PropTypes.node\n};\n","import './style.css';\nimport React from 'react';\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n    return (\n        <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n            ✗\n        </span>\n    );\n}\n\nexport default DeleteBtn;\n","import { LOADING, REMOVE_FAVORITE, UPDATE_FAVORITES } from '../utils/actions';\nimport { List, ListItem } from '../components/List';\nimport React, { useEffect } from 'react';\nimport DeleteBtn from '../components/DeleteBtn';\nimport { Link } from 'react-router-dom';\nimport { useStoreContext } from '../utils/GlobalState';\n\nconst FavoritesList = () => {\n    const [state, dispatch] = useStoreContext();\n\n    const getFavorites = () => {\n        dispatch({ type: LOADING });\n        dispatch({ type: UPDATE_FAVORITES });\n    };\n\n    const removeFromFavorites = id => {\n        dispatch({\n            type: REMOVE_FAVORITE,\n            _id: id\n        });\n    };\n\n    useEffect(() => {\n        getFavorites();\n    });\n\n    return (\n        <div className=\"container mb-5 mt-5\">\n            <h1 className=\"text-center\">Here&apos;s All of Your Favorite Posts</h1>\n            {state.favorites.length ?\n                <List>\n                    <h3 className=\"mb-5 mt-5\">Click on a post to view in detail</h3>\n                    {state.favorites.map(post =>\n                        <ListItem key={post._id}>\n                            <Link to={`/posts/${ post._id}`}>\n                                <strong>\n                                    {post.title} by {post.author}\n                                </strong>\n                            </Link>\n                            <DeleteBtn onClick={() => removeFromFavorites(post._id)} />\n                        </ListItem>\n                    )}\n                </List>\n                :\n                <h3>You haven&apos;t added any favorites yet!</h3>\n            }\n            <div className=\"mt-5\">\n                <Link to=\"home\">Back to home</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default FavoritesList;\n","import { ADD_POST, LOADING } from '../../utils/actions';\nimport React, { useRef } from 'react';\nimport API from '../../utils/API';\nimport { useStoreContext } from '../../utils/GlobalState';\n\nfunction CreatePostForm() {\n    const titleRef = useRef();\n    const bodyRef = useRef();\n    const authorRef = useRef();\n    const [state, dispatch] = useStoreContext();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch({ type: LOADING });\n        API.savePost({\n            title: titleRef.current.value,\n            body: bodyRef.current.value,\n            author: authorRef.current.value\n        })\n            .then(result => {\n                dispatch({\n                    type: ADD_POST,\n                    post: result.data\n                });\n            })\n            .catch(err => console.log(err));\n\n        titleRef.current.value = ``;\n        bodyRef.current.value = ``;\n    };\n\n    return (\n        <div>\n            <div className=\"jumbotron\">\n                <img\n                    alt=\"blog scrabble\"\n                    className=\"img-fluid img-thumbnail\"\n                    // eslint-disable-next-line max-len\n                    src=\"https://images.pexels.com/photos/459688/pexels-photo-459688.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n                />\n            </div>\n            <h1>Create a blog post</h1>\n            <form className=\"form-group mt-5 mb-5\" onSubmit={handleSubmit}>\n                <input\n                    className=\"form-control mb-5\"\n                    required\n                    ref={titleRef}\n                    placeholder=\"Title\"\n                />\n                <textarea\n                    className=\"form-control mb-5\"\n                    required\n                    ref={bodyRef}\n                    placeholder=\"Body\"\n                />\n                <input\n                    className=\"form-control mb-5\"\n                    ref={authorRef}\n                    placeholder=\"Screen name\"\n                />\n                <button\n                    className=\"btn btn-success mt-3 mb-5\"\n                    disabled={state.loading}\n                    type=\"submit\"\n                >\n                    Save Post\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreatePostForm;\n","import { LOADING, REMOVE_POST, UPDATE_POSTS } from '../../utils/actions';\nimport { List, ListItem } from '../List';\nimport React, { useEffect } from 'react';\nimport API from '../../utils/API';\nimport DeleteBtn from '../DeleteBtn';\nimport { Link } from 'react-router-dom';\nimport { useStoreContext } from '../../utils/GlobalState';\n\nfunction PostsList() {\n    const [state, dispatch] = useStoreContext();\n\n    const removePost = id => {\n        API.deletePost(id)\n            .then(() => {\n                dispatch({\n                    type: REMOVE_POST,\n                    _id: id\n                });\n            })\n            .catch(err => console.log(err));\n    };\n\n    const getPosts = () => {\n        dispatch({ type: LOADING });\n        API.getPosts()\n            .then(results => {\n                dispatch({\n                    type: UPDATE_POSTS,\n                    posts: results.data\n                });\n            })\n            .catch(err => console.log(err));\n    };\n\n    useEffect(() => {\n        getPosts();\n    }, []);\n\n    return (\n        <div>\n            <h1>All Blog Posts</h1>\n            <h3 className=\"mb-5 mt-5\">Click on a post to view</h3>\n            {state.posts.length ?\n                <List>\n                    {state.posts.map(post =>\n                        <ListItem key={post._id}>\n                            <Link to={`/posts/${ post._id}`}>\n                                <strong>\n                                    {post.title} by {post.author}\n                                </strong>\n                            </Link>\n                            <DeleteBtn onClick={() => removePost(post._id)} />\n                        </ListItem>\n                    )}\n                </List>\n                :\n                <h3>You haven&apos;t added any posts yet!</h3>\n            }\n            <div className=\"mt-5\">\n                <Link to=\"favorites\">View favorites</Link>\n            </div>\n        </div>\n    );\n}\n\nexport default PostsList;\n","import { Col, Container, Row } from '../components/Grid';\nimport CreatePostForm from '../components/CreatePostForm';\nimport PostsList from '../components/PostsList';\nimport React from 'react';\n\nconst Home = () =>\n    <Container fluid>\n        <Row>\n            <Col size=\"md-6\">\n                <CreatePostForm />\n            </Col>\n            <Col size=\"md-6 sm-12\">\n                <PostsList />\n            </Col>\n        </Row>\n    </Container>;\nexport default Home;\n","import React from 'react';\nimport { useStoreContext } from '../../utils/GlobalState';\n\nfunction Nav() {\n    const [store] = useStoreContext();\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"/\">\n                Your personal CMS\n            </a>\n            {store.loading ?\n                <a href=\"# \" className=\"navbar-brand ml-auto\">Loading...</a>\n                :\n                <></>\n            }\n        </nav>\n    );\n}\n\nexport default Nav;\n","import { Col, Container, Row } from '../components/Grid';\nimport Jumbotron from '../components/Jumbotron';\nimport React from 'react';\n\nconst NoMatch = () =>\n    <Container fluid>\n        <Row>\n            <Col size=\"md-12\">\n                <Jumbotron>\n                    <h1>404 Page Not Found</h1>\n                    <h1>\n                        <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                            🙄\n                        </span>\n                    </h1>\n                </Jumbotron>\n            </Col>\n        </Row>\n    </Container>;\nexport default NoMatch;\n","import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Detail from './pages/Detail';\nimport FavoritesList from './pages/FavoritesList';\nimport Home from './pages/Home';\nimport Nav from './components/Nav';\nimport NoMatch from './pages/NoMatch';\nimport React from 'react';\nimport { StoreProvider } from './utils/GlobalState';\n\nfunction App() {\n    return (\n        <Router>\n            <div>\n                <StoreProvider>\n                    <Nav />\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route exact path=\"/home\" component={Home} />\n                        <Route exact path=\"/favorites\" component={FavoritesList} />\n                        <Route exact path=\"/posts/:id\" component={Detail} />\n                        <Route component={NoMatch} />\n                    </Switch>\n                </StoreProvider>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import App from './App';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById(`root`));\n"],"sourceRoot":""}